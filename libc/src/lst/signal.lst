Microsoft (R) Macro Assembler Version 6.15.8803		    08/27/17 03:46:03
src\signal.asm						     Page 1 - 1


				; ------------------------------------------------------------------
				.model tiny, c							; Small memoy model
				.386								; 80386 CPU
				include libc.inc						; Include library headers
			      C include stdio.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C include string.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C include ctype.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C include conio.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C include assert.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C include stdbool.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C include signal.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C include time.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
 0000				.data								; Data segment
 0000 00			 catch_func db ?						; Buffer for returning data
 0001 01			 SIGCHECK db 1
 0000				.code								; Start of code segment
				; ------------------------------------------------------------------


				clearBuff MACRO arg
				    push di
				    push cx
				    push ax
				    cld
				    mov di, offset arg
				    mov cx, sizeof arg						; Repeat for the length of the buffer
				    mov al, 0							; Clear with null (0)
				    rep stosb
				    pop di
				    pop cx
				    pop ax
				ENDM


 0000				signal PROC sig:PTR BYTE, func:WORD
				    .IF sig == SIGINT
					.IF SIGCHECK == true					 ; Signal failsafe
 0010  8B 46 06				    mov ax, func					 ; Move func into register
 0013  A3 0000 R			    mov WORD PTR catch_func, ax				 ; Move ax into the static var
 0016  C6 06 0001 R 00			    mov SIGCHECK, false					 ; Set failsafe to false
 001B  B8 0000				    mov ax, 0						 ; Return 0 for success
					.ELSE
 0020  B8 FFFF				    mov ax, -1
					.ENDIF
				    .ELSEIF sig == SIGILL
				    .ELSEIF sig == SIGFPE
				    .ELSEIF sig == SIGSEGV
				    .ELSEIF sig == SIGTERM
				    .ELSEIF sig == SIGBREAK
				    .ELSEIF sig == SIGABRT
				    .ELSEIF sig == NSIG
				    .ELSE
 005D  B8 FFFF				mov ax, -1
				    .ENDIF
				    ret
 0062				signal ENDP


 0062				raise PROC sig:PTR BYTE
				    .IF sig == SIGINT
				    	.IF SIGCHECK == false
 0072  A1 0000 R			    mov ax, WORD PTR catch_func
 0075  FF D0				    call ax
 0077  C6 06 0001 R 01			    mov SIGCHECK, true
					    clearBuff catch_func
 007C  57		     1	    push di
 007D  51		     1	    push cx
 007E  50		     1	    push ax
 007F  FC		     1	    cld
 0080  BF 0000 R	     1	    mov di, offset catch_func
 0083  B9 0001		     1	    mov cx, sizeof catch_func						; Repeat for the length of the buffer
 0086  B0 00		     1	    mov al, 0							; Clear with null (0)
 0088  F3/ AA		     1	    rep stosb
 008A  5F		     1	    pop di
 008B  59		     1	    pop cx
 008C  58		     1	    pop ax
 008D  B8 0000				    mov ax, 0
					.ELSE
 0092  B8 FFFF				    mov ax, -1
					.ENDIF
				    .ELSEIF sig == SIGILL
				    .ELSEIF sig == SIGFPE
				    .ELSEIF sig == SIGSEGV
				    .ELSEIF sig == SIGTERM
				    .ELSEIF sig == SIGBREAK
				    .ELSEIF sig == SIGABRT
				    .ELSEIF sig == NSIG
				    .ELSE
				    .ENDIF
				    ret
 00D1				raise ENDP

				END
Microsoft (R) Macro Assembler Version 6.15.8803		    08/27/17 03:46:03
src\signal.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

clearBuff  . . . . . . . . . . .	Proc


Structures and Unions:

                N a m e                  Size
                                         Offset      Type

tm . . . . . . . . . . . . . . .	 0012
  tm_sec . . . . . . . . . . . .	 0000	     Word
  tm_min . . . . . . . . . . . .	 0002	     Word
  tm_hour  . . . . . . . . . . .	 0004	     Word
  tm_mday  . . . . . . . . . . .	 0006	     Word
  tm_mon . . . . . . . . . . . .	 0008	     Word
  tm_year  . . . . . . . . . . .	 000A	     Word
  tm_wday  . . . . . . . . . . .	 000C	     Word
  tm_yday  . . . . . . . . . . .	 000E	     Word
  tm_isdst . . . . . . . . . . .	 0010	     Word


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

DGROUP . . . . . . . . . . . . .	GROUP
_TEXT  . . . . . . . . . . . . .	16 Bit	 00D1	  Word	  Public  'CODE'	
_DATA  . . . . . . . . . . . . .	16 Bit	 0002	  Word	  Public  'DATA'	


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

_assert  . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
bcd  . . . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
clrscr . . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
cprintf  . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
cputsxy  . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
cputs  . . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
cscanf . . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
cursoroff  . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
cursoron . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
delay  . . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
drawline . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
getchar  . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
getche . . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
getch  . . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
gets . . . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
gotoxy . . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
highvideo  . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
insline  . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
isalnum  . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
isalpha  . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
iscntrl  . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
isdigit  . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
isgraph  . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
islower  . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
isprint  . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
ispunct  . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
isspace  . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
isupper  . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
isxdigit . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
kbhit  . . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
localtime  . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
lowvideo . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
memchr . . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
memcmp . . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
memcpy . . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
memmove  . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
memset . . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
newline  . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
printf . . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
putchar  . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
putch  . . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
puts . . . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
raise  . . . . . . . . . . . . .	P Near	 0062	  _TEXT	Length= 006F Public C
  sig  . . . . . . . . . . . . .	Word	 bp + 0004
scanf  . . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
setcursortype  . . . . . . . . .	P Near	 0000	  Length= 0000 External C
signal . . . . . . . . . . . . .	P Near	 0000	  _TEXT	Length= 0062 Public C
  sig  . . . . . . . . . . . . .	Word	 bp + 0004
  func . . . . . . . . . . . . .	Word	 bp + 0006
strcat . . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
strchr . . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
strcmp . . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
strcoll  . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
strcpy . . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
strcspn  . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
strlen . . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
strncat  . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
strncmp  . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
strncpy  . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
strpbrk  . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
strrchr  . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
strspn . . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
strstr . . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
strtok . . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
strxfrm  . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
textbackground . . . . . . . . .	P Near	 0000	  Length= 0000 External C
textcolor  . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
tolower  . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
toupper  . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
ungetch  . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
wherex . . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C
wherey . . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 0000h	 
@DataSize  . . . . . . . . . . .	Number	 0000h	 
@Interface . . . . . . . . . . .	Number	 0001h	 
@Model . . . . . . . . . . . . .	Number	 0001h	 
@code  . . . . . . . . . . . . .	Text   	 DGROUP
@data  . . . . . . . . . . . . .	Text   	 DGROUP
@fardata?  . . . . . . . . . . .	Text   	 FAR_BSS
@fardata . . . . . . . . . . . .	Text   	 FAR_DATA
@stack . . . . . . . . . . . . .	Text   	 DGROUP
BUFSIZ . . . . . . . . . . . . .	Number	 1000h	 
FILENAME_MAX . . . . . . . . . .	Number	 000Bh	 
NSIG . . . . . . . . . . . . . .	Number	 0017h	 
SIGABRT  . . . . . . . . . . . .	Number	 0016h	 
SIGBREAK . . . . . . . . . . . .	Number	 0015h	 
SIGCHECK . . . . . . . . . . . .	Byte	 0001	  _DATA	
SIGFPE . . . . . . . . . . . . .	Number	 0008h	 
SIGILL . . . . . . . . . . . . .	Number	 0004h	 
SIGINT . . . . . . . . . . . . .	Number	 0002h	 
SIGSEGV  . . . . . . . . . . . .	Number	 000Bh	 
SIGTERM  . . . . . . . . . . . .	Number	 000Fh	 
_ASSERT_ . . . . . . . . . . . .	Text   	 1
_CONIO_  . . . . . . . . . . . .	Text   	 1
_CTYPE_  . . . . . . . . . . . .	Text   	 1
_SIGNAL_ . . . . . . . . . . . .	Text   	 1
_STDBOOL_  . . . . . . . . . . .	Text   	 1
_STDIO_  . . . . . . . . . . . .	Text   	 1
_STRING_ . . . . . . . . . . . .	Text   	 1
_TIME_ . . . . . . . . . . . . .	Text   	 1
catch_func . . . . . . . . . . .	Byte	 0000	  _DATA	
false  . . . . . . . . . . . . .	Number	 0000h	 
true . . . . . . . . . . . . . .	Number	 0001h	 

	   0 Warnings
	   0 Errors
